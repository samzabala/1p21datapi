<?php

$_1p21_dv_fields_cpt = array(
	'key' => 'group_5d4206c985d00',
	'title' => 'Data Visualizer',
	'fields' => array(
		array(
			'key' => 'field_5d420aa3de271',
			'label' => 'Source',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d420de06b6c9',
			'label' => 'Source Type',
			'name' => 'dv_src_type',
			'type' => 'select',
			'instructions' => 'Choose how file should be imported',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'file' => 'File (csv,tsv)',
				'url' => 'URL',
				'text' => 'Text (JSON code)',
				'rows' => 'Rows (UI Field)',
			),
			'default_value' => array(
			),
			'allow_null' => 1,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5d4206cdde265',
			'label' => 'File',
			'name' => 'dv_src_file',
			'type' => 'file',
			'instructions' => 'Must be tsv, csv',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '==',
						'value' => 'file',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'library' => 'all',
			'min_size' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5d447ad169ee3',
			'label' => 'Url',
			'name' => 'dv_src_url',
			'type' => 'url',
			'instructions' => 'Url must link directly to data file in either .csv,.json, or .tsv format',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '==',
						'value' => 'url',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
		),
		array(
			'key' => 'field_5d420ebe6b6ca',
			'label' => 'Text',
			'name' => 'dv_src_text',
			'type' => 'textarea',
			'instructions' => 'input json code',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '==',
						'value' => 'text',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'maxlength' => '',
			'rows' => '',
			'new_lines' => '',
		),
		array(
			'key' => 'field_5d420719de267',
			'label' => 'Rows',
			'name' => 'dv_src_row',
			'type' => 'repeater',
			'instructions' => 'Input a basic data in rows',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '==',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'table',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5d420962de26e',
					'label' => 'Label (Data 1)',
					'name' => 'label',
					'type' => 'text',
					'instructions' => 'data that will represent the labels or a separate axis of the data.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d42077fde268',
					'label' => 'Value (Data 2)',
					'name' => 'value',
					'type' => 'text',
					'instructions' => 'data that will represent the labels.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d42107c69b56',
			'label' => 'Data Setup',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '!=',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d4875c085673',
			'label' => 'Source Key',
			'name' => 'dv_src_key',
			'type' => 'text',
			'instructions' => 'Fill in the key for the data to use if it is not in the root level',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '!=',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => 'dv-code',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => 'content.items',
			'prepend' => 'data.',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5d420a6cde270',
			'label' => 'Name Key',
			'name' => 'dv_data_key_0',
			'type' => 'text',
			'instructions' => 'Type in the key relative to the data instance<br>
Key or column name to represent or name the data',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '!=',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => 'dv-code',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => 'content',
			'prepend' => 'data[0].',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5d420b33de274',
			'label' => 'Value Key',
			'name' => 'dv_data_key_1',
			'type' => 'text',
			'instructions' => 'Type in the key relative to the data instance<br>
Key or column name of the data that will represent data based on the name key',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '!=',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => 'dv-code',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => 'content',
			'prepend' => 'data[0].',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5d420abade272',
			'label' => 'Layout',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d420a45de26f',
			'label' => 'Type',
			'name' => 'dv_type',
			'type' => 'select',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bar' => 'Bar',
				'line' => 'Line (Not yet)',
				'pie' => 'Pie (Not Yet)',
				'scatter' => 'Scatter Plot (Coming Soon)',
			),
			'default_value' => array(
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5d448fef59823',
			'label' => 'X Settings',
			'name' => 'dv_x',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '!=',
						'value' => 'pie',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d42110769b59',
					'label' => 'Axis Data',
					'name' => 'data',
					'type' => 'select',
					'instructions' => 'Data key to represent horizontally',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						0 => 'Data 1',
						1 => 'Data 2',
					),
					'default_value' => array(
						0 => 0,
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d44905e59825',
					'label' => 'Alignment',
					'name' => 'align',
					'type' => 'select',
					'instructions' => 'Where to align the axis',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'top' => 'Top',
						'bottom' => 'Bottom',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d49b51b576ae',
					'label' => 'Use Ticks?',
					'name' => 'ticks',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => 'Checking will display axis this on a rule instead of inside the graph element',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d4211d969b5b',
					'label' => 'Label',
					'name' => 'label',
					'type' => 'text',
					'instructions' => 'Label for horizontal data. will default to y axis key',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d4af01f2e07c',
					'label' => 'Advanced',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d44948ed8de9',
					'label' => 'Ticks Format',
					'name' => 'ticks_format',
					'type' => 'text',
					'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a>',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '"~s" | function(data){ return +data; }',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d44915159827',
					'label' => 'Ticks Amount',
					'name' => 'ticks_amount',
					'type' => 'number',
					'instructions' => 'number of tick marks along the axis',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '!=',
								'value' => '0',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '!=',
								'value' => '0',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499c699d0fc',
					'label' => 'Minimum',
					'name' => 'min',
					'type' => 'number',
					'instructions' => 'value of the minimum tick mark.<br>Leave blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499c809d0fd',
					'label' => 'Maximum',
					'name' => 'max',
					'type' => 'number',
					'instructions' => 'value of the maximum tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
			),
		),
		array(
			'key' => 'field_5d4494e1f5294',
			'label' => 'Y Settings',
			'name' => 'dv_y',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '!=',
						'value' => 'pie',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d4494e1f5295',
					'label' => 'Axis Data',
					'name' => 'data',
					'type' => 'select',
					'instructions' => 'Data key to represent horizontally',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						0 => 'Data 1',
						1 => 'Data 2',
					),
					'default_value' => array(
						0 => 1,
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d4494e1f5297',
					'label' => 'Alignment',
					'name' => 'align',
					'type' => 'select',
					'instructions' => 'Where to align the axis',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'left' => 'Left',
						'right' => 'Right',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d49b81e8a9b1',
					'label' => 'Use Ticks?',
					'name' => 'ticks',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => 'Checking will display axis this on a rule instead of inside the graph element',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d4494e1f5296',
					'label' => 'Label',
					'name' => 'label',
					'type' => 'text',
					'instructions' => 'Label for horizontal data. will default to y axis key',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d4af0ae2e07f',
					'label' => 'Advanced',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d4494e1f5299',
					'label' => 'Ticks Format',
					'name' => 'ticks_format',
					'type' => 'text',
					'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a>',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '"~s" | function(data){ return +data; }',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d4494e1f5298',
					'label' => 'Ticks Amount',
					'name' => 'ticks_amount',
					'type' => 'number',
					'instructions' => 'number of tick marks along the axis',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '!=',
								'value' => '0',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '!=',
								'value' => '0',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499bac9d0fa',
					'label' => 'Minimum',
					'name' => 'min',
					'type' => 'number',
					'instructions' => 'value of the minimum tick mark.<br>Leave blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499c2a9d0fb',
					'label' => 'Maximum',
					'name' => 'max',
					'type' => 'number',
					'instructions' => 'value of the maximum tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '0',
							),
							array(
								'field' => 'field_5d4492875982d',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
			),
		),
		array(
			'key' => 'field_5d499f4b8f7aa',
			'label' => 'Pie Settings',
			'name' => 'dv_pi',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'pie',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d49a0598f7ac',
					'label' => 'Label Style',
					'name' => 'label_style',
					'type' => 'select',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'linked' => 'Linked',
						'within' => 'Within',
						'corner' => 'Corner',
						'donut' => 'Donut',
					),
					'default_value' => array(
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d49a79cdbf08',
					'label' => 'Data Format',
					'name' => 'data_format',
					'type' => 'text',
					'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a>',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '"~s" | function(data){ return +data; }',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d42ff6a5f461',
			'label' => 'Advanced',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d42ff755f462',
			'label' => 'Color Scheme',
			'name' => 'dv_colors',
			'type' => 'repeater',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'row',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5d42ff995f463',
					'label' => 'Color',
					'name' => 'color',
					'type' => 'color_picker',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
				),
			),
		),
		array(
			'key' => 'field_5d42ffcf5f464',
			'label' => 'Colors Data Key',
			'name' => 'dv_colors_data_key',
			'type' => 'text',
			'instructions' => 'Data key to link color scheme to',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => 'dv-code',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'post_type',
				'operator' => '==',
				'value' => 'data-visual',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => 1,
	'description' => '',
);