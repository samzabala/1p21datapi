<?php
//only fields that exist here will be passed down to the data visual object or array or whatever that way shits secure
// also whenever this is updated, when the admin page is viewed after update, the json file of fields is updated as well so if the dev of this plugin needs to fix the fields she can do so by importing the fields on aDIFFERENT TEST WORDPRESS SITE so it doesnt conflict with the site that the plugin is installed on
$_1p21_dv_fields_groups = array(
	'single_post' => array(
		'key' => 'group_5d4206c985d00',
		'title' => 'Data Visualizer',
		'fields' => array(
			array(
				'key' => 'field_5d67f813edf06',
				'label' => 'Description',
				'name' => 'dv_description',
				'type' => 'textarea',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'default_value' => '',
				'placeholder' => '',
				'maxlength' => '',
				'rows' => 4,
				'new_lines' => '',
			),
			array(
				'key' => 'field_5d9baf46f84ac',
				'label' => 'Step 1: Source Settings',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'top',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_5d571a157030d',
				'label' => 'Source',
				'name' => 'dv_src',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d9b8ffe900c3',
						'label' => 'Multiple Graph',
						'name' => 'multiple',
						'type' => 'true_false',
						'instructions' => 'Multiple data must be set up as an array to avoid errors',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Enabling will modify setup to multiple data groups',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5ec843d2d2132',
						'label' => 'Data is pre-nested',
						'name' => 'pre_nest',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Graph may not display properly if data is already nested. Check this if the multiple graph data is not displaying properly',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d420de06b6c9',
						'label' => 'Source Type',
						'name' => 'type',
						'type' => 'select',
						'instructions' => 'Choose how the data should be imported',
						'required' => 1,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'file' => 'File (csv,tsv)',
							'url' => 'URL',
							'text' => 'Text (JSON code)',
							'rows' => 'Rows (UI Field)',
						),
						'default_value' => array(
						),
						'allow_null' => 1,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d4206cdde265',
						'label' => 'File',
						'name' => 'file',
						'type' => 'file',
						'instructions' => 'Must be tsv, csv',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '==',
									'value' => 'file',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'return_format' => 'array',
						'library' => 'all',
						'min_size' => '',
						'max_size' => '',
						'mime_types' => 'csv,tsv',
					),
					array(
						'key' => 'field_5d447ad169ee3',
						'label' => 'Url',
						'name' => 'url',
						'type' => 'url',
						'instructions' => 'Url must link directly to data file in either .csv,.json, or .tsv format',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '==',
									'value' => 'url',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d420ebe6b6ca',
						'label' => 'Text',
						'name' => 'text',
						'type' => 'textarea',
						'instructions' => 'input json code',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '==',
									'value' => 'text',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'maxlength' => '',
						'rows' => '',
						'new_lines' => '',
					),
					array(
						'key' => 'field_5d420719de267',
						'label' => 'Rows',
						'name' => 'row',
						'type' => 'repeater',
						'instructions' => 'Input a basic data in rows',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '==',
									'value' => 'rows',
								),
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '!=',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'collapsed' => '',
						'min' => 0,
						'max' => 0,
						'layout' => 'table',
						'button_label' => '',
						'sub_fields' => array(
							array(
								'key' => 'field_5d420962de26e',
								'label' => 'Name',
								'name' => '0',
								'type' => 'text',
								'instructions' => 'data that will represent the labels or a separate axis of the data.',
								'required' => 1,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '25',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d42077fde268',
								'label' => 'Value',
								'name' => '1',
								'type' => 'text',
								'instructions' => 'data that will represent the labels.',
								'required' => 1,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '25',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d5ef5079216e',
								'label' => 'Category',
								'name' => 'color',
								'type' => 'text',
								'instructions' => 'data that will represent a color in the color palette. (Only available if data visual is not in a pie chart layout)',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'field_5d420a45de26f',
											'operator' => '!=',
											'value' => 'pie',
										),
									),
								),
								'wrapper' => array(
									'width' => '25',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d5ef6f792170',
								'label' => 'Plot Point Area',
								'name' => 'area',
								'type' => 'text',
								'instructions' => 'data that will influence the size of the scatter plot data. leaving blank will make all scatter plots the same size',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'field_5d420a45de26f',
											'operator' => '==',
											'value' => 'scatter',
										),
									),
								),
								'wrapper' => array(
									'width' => '25',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
						),
					),
					array(
						'key' => 'field_5d9b96a0d2c06',
						'label' => 'Rows',
						'name' => 'row_m',
						'type' => 'repeater',
						'instructions' => 'Input multiple sets of basic data in rows',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '==',
									'value' => 'rows',
								),
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'collapsed' => '',
						'min' => 0,
						'max' => 0,
						'layout' => 'table',
						'button_label' => 'Add Data Group',
						'sub_fields' => array(
							array(
								'key' => 'field_5d9b96bbd2c0b',
								'label' => 'Data Set',
								'name' => 'data_set',
								'type' => 'repeater',
								'instructions' => '',
								'required' => 1,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'collapsed' => '',
								'min' => 0,
								'max' => 0,
								'layout' => 'table',
								'button_label' => '',
								'sub_fields' => array(
									array(
										'key' => 'field_5d9b96a0d2c07',
										'label' => 'Name',
										'name' => '0',
										'type' => 'text',
										'instructions' => 'data that will represent the labels or a separate axis of the data.',
										'required' => 1,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '25',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'field_5d9b96a0d2c08',
										'label' => 'Value',
										'name' => '1',
										'type' => 'text',
										'instructions' => 'data that will represent the labels.',
										'required' => 1,
										'conditional_logic' => 0,
										'wrapper' => array(
											'width' => '25',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'field_5d9b96a0d2c09',
										'label' => 'Category',
										'name' => 'color',
										'type' => 'text',
										'instructions' => 'data that will represent a color in the color palette. (Only available if data visual is not in a pie chart layout)',
										'required' => 0,
										'conditional_logic' => array(
											array(
												array(
													'field' => 'field_5d420a45de26f',
													'operator' => '!=',
													'value' => 'pie',
												),
											),
										),
										'wrapper' => array(
											'width' => '25',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
									array(
										'key' => 'field_5d9b96a0d2c0a',
										'label' => 'Plot Point Area',
										'name' => 'area',
										'type' => 'text',
										'instructions' => 'data that will influence the size of the scatter plot data. leaving blank will make all scatter plots the same size',
										'required' => 0,
										'conditional_logic' => array(
											array(
												array(
													'field' => 'field_5d420a45de26f',
													'operator' => '==',
													'value' => 'scatter',
												),
											),
										),
										'wrapper' => array(
											'width' => '25',
											'class' => '',
											'id' => '',
										),
										'default_value' => '',
										'placeholder' => '',
										'prepend' => '',
										'append' => '',
										'maxlength' => '',
									),
								),
							),
						),
					),
					array(
						'key' => 'field_5d4875c085673',
						'label' => 'Source Key',
						'name' => 'key',
						'type' => 'text',
						'instructions' => 'Fill in the key for the data to use if it is not in the root level<br> If Multiple setup is enabled, fill in the path to the array of multiple data',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=',
									'value' => 'rows',
								),
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => 'content.items',
						'prepend' => 'data.',
						'append' => '',
						'maxlength' => '',
					),
				),
			),
			array(
				'key' => 'field_5d571ad986ab3',
				'label' => 'Step 2: Data Settings',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d4206cdde265',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d447ad169ee3',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d420ebe6b6ca',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d420719de267',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d9b96a0d2c06',
							'operator' => '!=empty',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'top',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_5d420a45de26f',
				'label' => 'Type',
				'name' => 'dv_type',
				'type' => 'select',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
					'bar' => 'Bar (Default)',
					'line' => 'Line',
					'pie' => 'Pie',
					'scatter' => 'Scatter Plot',
				),
				'default_value' => array(
					0 => 'bar',
				),
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 0,
				'return_format' => 'value',
				'ajax' => 0,
				'placeholder' => '',
			),
			array(
				'key' => 'field_5d5702b2b6d93',
				'label' => 'Data Keys',
				'name' => 'dv_key',
				'type' => 'group',
				'instructions' => 'Fill in the key for the data to use if it is not in the root level',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420de06b6c9',
							'operator' => '!=',
							'value' => 'rows',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => 'dv-code',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5ec8464400a18',
						'label' => 'Multiple Key',
						'name' => 'multiple',
						'type' => 'text',
						'instructions' => '',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5ec843d2d2132',
									'operator' => '!=',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d420a6cde270',
						'label' => 'Name Key',
						'name' => '0',
						'type' => 'text',
						'instructions' => 'Type in the key relative to the data instance<br>
	Key or column name to represent or name the data',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=',
									'value' => 'rows',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => 'content',
						'prepend' => 'data[0].',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d420b33de274',
						'label' => 'Value Key',
						'name' => '1',
						'type' => 'text',
						'instructions' => 'Type in the key relative to the data instance<br>
	Key or column name of the data that will represent data based on the name key',
						'required' => 1,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=',
									'value' => 'rows',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => 'content',
						'prepend' => 'data[0].',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d602683abd8f',
						'label' => 'Plot Point Area Key',
						'name' => 'area',
						'type' => 'text',
						'instructions' => 'data that will influence the size of the scatter plot data. leaving blank will make all scatter plots the same size',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => 'data[0].',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d42ffcf5f464',
						'label' => 'Color Key',
						'name' => 'color',
						'type' => 'text',
						'instructions' => 'Data key to link color scheme to.<br>
	if layout is set to line, this will be applied to plot points and will override set points color',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=',
									'value' => 'rows',
								),
								array(
									'field' => 'field_5d9b9853d5bec',
									'operator' => '==',
									'value' => 'key',
								),
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=',
									'value' => 'rows',
								),
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '!=',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => 'data[0].',
						'append' => '',
						'maxlength' => '',
					),
				),
			),
			array(
				'key' => 'field_5d55d2e48b9a1',
				'label' => 'Set Name Key As Numeric',
				'name' => 'dv_name_is_num',
				'type' => 'true_false',
				'instructions' => 'Adds additional numeric capabilities to name data.',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '!=',
							'value' => 'bar',
						),
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '!=',
							'value' => 'pie',
						),
					),
				),
				'wrapper' => array(
					'width' => '100',
					'class' => 'dv-code',
					'id' => '',
				),
				'message' => 'Convert name key to an axis of numeric data',
				'default_value' => 0,
				'ui' => 0,
				'ui_on_text' => '',
				'ui_off_text' => '',
			),
			array(
				'key' => 'field_5db7516bf3aa9',
				'label' => 'Reverse',
				'name' => 'dv_reverse',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a6cde270',
							'operator' => '!=empty',
						),
						array(
							'field' => 'field_5d420b33de274',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d420719de267',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d9b96a0d2c06',
							'operator' => '!=empty',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5db75190f3aaa',
						'label' => 'Name Data',
						'name' => '0',
						'type' => 'true_false',
						'instructions' => 'Reverse order of name data',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a6cde270',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'message' => '',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5db751a5f3aab',
						'label' => 'Value Data',
						'name' => '1',
						'type' => 'true_false',
						'instructions' => 'Reverse value data',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420b33de274',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'message' => '',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5db7552a30e8e',
						'label' => 'Color Data',
						'name' => 'color',
						'type' => 'true_false',
						'instructions' => 'Reverse order of color category data',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42ffcf5f464',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => '',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5e04ee04602d5',
						'label' => 'Area Data',
						'name' => 'area',
						'type' => 'true_false',
						'instructions' => 'Reverse order of scatter plot point area data',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d602683abd8f',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => '',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d9b9a52b59b3',
						'label' => 'Multiple Data',
						'name' => 'multiple',
						'type' => 'true_false',
						'instructions' => 'Reverse order of datasets',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420de06b6c9',
									'operator' => '!=empty',
								),
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Enabling will reverse the display of the data groups in the graph',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
				),
			),
			array(
				'key' => 'field_5d60205502da2',
				'label' => 'Format Settings',
				'name' => 'dv_format',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a6cde270',
							'operator' => '!=empty',
						),
						array(
							'field' => 'field_5d420b33de274',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d9b96a0d2c06',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d420719de267',
							'operator' => '!=empty',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d5c5b3134de0',
						'label' => 'Name Settings',
						'name' => '0',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a6cde270',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'field_5d5c5b3134de8',
								'label' => 'Prepend',
								'name' => 'prepend',
								'type' => 'text',
								'instructions' => 'String of character/s to prepend to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 'Est.',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d5c5b3134de9',
								'label' => 'Append',
								'name' => 'append',
								'type' => 'text',
								'instructions' => 'String of character/s to append to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 'Million Dollars',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d6021bc02da8',
								'label' => 'Divider',
								'name' => 'divider',
								'type' => 'number',
								'instructions' => 'Divide numeric data to shorten the value.',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'field_5d55d2e48b9a1',
											'operator' => '==',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 1000,
								'prepend' => '',
								'append' => '',
								'min' => '',
								'max' => '',
								'step' => '.0000000001',
							),
							array(
								'key' => 'field_5d5c5b3134def',
								'label' => 'Advanced',
								'name' => '',
								'type' => 'accordion',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'field_5d5c5b3134de3',
											'operator' => '==',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'open' => 0,
								'multi_expand' => 0,
								'endpoint' => 0,
							),
							array(
								'key' => 'field_5d5c5b3134df0',
								'label' => 'Format Parameter',
								'name' => 'parameter',
								'type' => 'textarea',
								'instructions' => 'accepts string format or function<br>Reference: <a target="_blank" href="https://github.com/d3/d3-format#locale_format">https://github.com/d3/d3-format#locale_format</a><br>Setting this will override prepend,append, and divider settings',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '"~s" | function(data,index){ return +data; }',
								'maxlength' => '',
								'rows' => 3,
								'new_lines' => '',
							),
						),
					),
					array(
						'key' => 'field_5d5c5c0734df1',
						'label' => 'Value Settings',
						'name' => '1',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420b33de274',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'field_5d5c5c0734df3',
								'label' => 'Prepend',
								'name' => 'prepend',
								'type' => 'text',
								'instructions' => 'String of character/s to prepend to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '$',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d5c5c0734df4',
								'label' => 'Append',
								'name' => 'append',
								'type' => 'text',
								'instructions' => 'String of character/s to append to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 'k',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d602592cb28c',
								'label' => 'Divider',
								'name' => 'divider',
								'type' => 'number',
								'instructions' => 'Divide numeric data to shorten the value.',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 1000,
								'prepend' => '',
								'append' => '',
								'min' => '',
								'max' => '',
								'step' => '.0000000001',
							),
							array(
								'key' => 'field_5d5c5c0734df6',
								'label' => 'Advanced',
								'name' => '',
								'type' => 'accordion',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'open' => 0,
								'multi_expand' => 0,
								'endpoint' => 0,
							),
							array(
								'key' => 'field_5d5c5c0734df7',
								'label' => 'Format Parameter',
								'name' => 'parameter',
								'type' => 'textarea',
								'instructions' => 'accepts string format or function<br>Reference: <a target="_blank" href="https://github.com/d3/d3-format#locale_format">https://github.com/d3/d3-format#locale_format</a><br>Setting this will override prepend,append, and divider settings',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '"~s" | function(data,index){ return +data; }',
								'maxlength' => '',
								'rows' => 3,
								'new_lines' => '',
							),
						),
					),
					array(
						'key' => 'field_5d60209802da3',
						'label' => 'Color Settings',
						'name' => 'color',
						'type' => 'group',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d42ffcf5f464',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d420719de267',
									'operator' => '!=empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d9b96a0d2c06',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'layout' => 'block',
						'sub_fields' => array(
							array(
								'key' => 'field_5d60209802da4',
								'label' => 'Prepend',
								'name' => 'prepend',
								'type' => 'text',
								'instructions' => 'String of character/s to prepend to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '$',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d60209802da5',
								'label' => 'Append',
								'name' => 'append',
								'type' => 'text',
								'instructions' => 'String of character/s to append to values',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '50',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => 'k',
								'prepend' => '',
								'append' => '',
								'maxlength' => '',
							),
							array(
								'key' => 'field_5d60209802da6',
								'label' => 'Advanced',
								'name' => '',
								'type' => 'accordion',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => array(
									array(
										array(
											'field' => 'field_5d5c5b3134de3',
											'operator' => '==',
											'value' => '1',
										),
									),
								),
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'open' => 0,
								'multi_expand' => 0,
								'endpoint' => 0,
							),
							array(
								'key' => 'field_5d60209802da7',
								'label' => 'Format Parameter',
								'name' => 'parameter',
								'type' => 'textarea',
								'instructions' => 'accepts string format or function<br>Reference: <a target="_blank" href="https://github.com/d3/d3-format#locale_format">https://github.com/d3/d3-format#locale_format</a><br>Setting this will override prepend,append, and divider settings',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => 'dv-code',
									'id' => '',
								),
								'default_value' => '',
								'placeholder' => '"~s" | function(data,index){ return +data; }',
								'maxlength' => '',
								'rows' => 3,
								'new_lines' => '',
							),
						),
					),
				),
			),
			array(
				'key' => 'field_5d420abade272',
				'label' => 'Step 3: Graph Settings',
				'name' => '',
				'type' => 'tab',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a6cde270',
							'operator' => '!=empty',
						),
						array(
							'field' => 'field_5d420b33de274',
							'operator' => '!=empty',
						),
						array(
							'field' => 'field_5d420de06b6c9',
							'operator' => '!=',
							'value' => '',
						),
					),
					array(
						array(
							'field' => 'field_5d9b96a0d2c06',
							'operator' => '!=empty',
						),
					),
					array(
						array(
							'field' => 'field_5d420719de267',
							'operator' => '!=empty',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'placement' => 'top',
				'endpoint' => 0,
			),
			array(
				'key' => 'field_5ed02cf258c30',
				'label' => 'Multiple Display',
				'name' => 'multiple_display',
				'type' => 'select',
				'instructions' => '',
				'required' => 1,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d9b8ffe900c3',
							'operator' => '==',
							'value' => '1',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'choices' => array(
				),
				'default_value' => array(
				),
				'allow_null' => 0,
				'multiple' => 0,
				'ui' => 0,
				'return_format' => 'value',
				'ajax' => 0,
				'placeholder' => '',
			),
			array(
				'key' => 'field_5d448fef59823',
				'label' => 'X Settings',
				'name' => 'dv_x',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'bar',
						),
					),
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'line',
						),
					),
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'scatter',
						),
					),
				),
				'wrapper' => array(
					'width' => '50',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d42110769b59',
						'label' => 'Axis Data',
						'name' => 'data',
						'type' => 'select',
						'instructions' => 'Data key to represent horizontally',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							0 => 'Name Data',
							1 => 'Value Data',
						),
						'default_value' => array(
							0 => 0,
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d44905e59825',
						'label' => 'Alignment',
						'name' => 'align',
						'type' => 'select',
						'instructions' => 'Where to align the axis',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'top' => 'Top',
							'bottom' => 'Bottom',
						),
						'default_value' => array(
							0 => 'bottom',
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d49b51b576ae',
						'label' => 'Use Ticks?',
						'name' => 'ticks',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Checking will display the axis data on a rule instead of inside or adjacent to the graph element',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d4211d969b5b',
						'label' => 'Label',
						'name' => 'label',
						'type' => 'text',
						'instructions' => 'Label for horizontal data. will default to y axis key',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d499c699d0fc',
						'label' => 'Minimum',
						'name' => 'min',
						'type' => 'number',
						'instructions' => 'value of the minimum height or tick mark.<br>Leave blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '0',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d499c809d0fd',
						'label' => 'Maximum',
						'name' => 'max',
						'type' => 'number',
						'instructions' => 'value of the maximum height or tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '0',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d543e0ded5d3',
						'label' => 'Ticks Settings',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5d44915159827',
						'label' => 'Ticks Amount',
						'name' => 'ticks_amount',
						'type' => 'number',
						'instructions' => 'number of tick marks along the axis.<br> If this has a value, adding grid increments is an available options',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '!=',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d548a3e2c501',
						'label' => 'Add Grid',
						'name' => 'grid',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'message' => 'add lines that will represent a grid along the axis',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d59f32e4c3c4',
						'label' => 'Grid Increment',
						'name' => 'grid_increment',
						'type' => 'number',
						'instructions' => 'How many ticks the grid will align to. leaving this blank will equal to 1',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d548a3e2c501',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d44915159827',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
				),
			),
			array(
				'key' => 'field_5d4494e1f5294',
				'label' => 'Y Settings',
				'name' => 'dv_y',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'bar',
						),
					),
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'line',
						),
					),
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'scatter',
						),
					),
				),
				'wrapper' => array(
					'width' => '50',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d4494e1f5295',
						'label' => 'Axis Data',
						'name' => 'data',
						'type' => 'select',
						'instructions' => 'Data key to represent horizontally',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							0 => 'Name Data',
							1 => 'Value Data',
						),
						'default_value' => array(
							0 => 1,
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d4494e1f5297',
						'label' => 'Alignment',
						'name' => 'align',
						'type' => 'select',
						'instructions' => 'Where to align the axis',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'left' => 'Left',
							'right' => 'Right',
						),
						'default_value' => array(
							0 => 'left',
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d49b81e8a9b1',
						'label' => 'Use Ticks?',
						'name' => 'ticks',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Checking will display the axis data on a rule instead of inside or adjacent to the graph element',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d4494e1f5296',
						'label' => 'Label',
						'name' => 'label',
						'type' => 'text',
						'instructions' => 'Label for horizontal data. will default to y axis key',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
					array(
						'key' => 'field_5d499bac9d0fa',
						'label' => 'Minimum',
						'name' => 'min',
						'type' => 'number',
						'instructions' => 'value of the minimum width or tick mark.<br>Set as blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '0',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d499c2a9d0fb',
						'label' => 'Maximum',
						'name' => 'max',
						'type' => 'number',
						'instructions' => 'value of the maximum width or tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '0',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d543eaa376e9',
						'label' => 'Ticks Settings',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5d4494e1f5298',
						'label' => 'Ticks Amount',
						'name' => 'ticks_amount',
						'type' => 'number',
						'instructions' => 'number of tick marks along the axis.<br> If this has a value, adding grid increments is an available options',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'scatter',
								),
								array(
									'field' => 'field_5d55d2e48b9a1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '!=',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d548a8f2c505',
						'label' => 'Add Grid',
						'name' => 'grid',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '!=',
									'value' => 'bar',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'message' => 'add lines that will represent a grid along the axis',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d59f39c4c3c5',
						'label' => 'Grid Increment',
						'name' => 'grid_increment',
						'type' => 'number',
						'instructions' => 'How many ticks the grid will align to. leaving this blank will equal to 1',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d548a8f2c505',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d4494e1f5298',
									'operator' => '!=empty',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
				),
			),
			array(
				'key' => 'field_5db859fd1cf09',
				'label' => 'Bar Graph Settings',
				'name' => 'bar',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'bar',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5e04f58485554',
						'label' => 'Gutter',
						'name' => 'gutter',
						'type' => 'number',
						'instructions' => 'space between bars',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => 0,
						'max' => 1,
						'step' => '.01',
					),
					array(
						'key' => 'field_5db747a9181fb',
						'label' => 'Text Within Bar',
						'name' => 'text_within',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '!=',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'bar',
								),
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Enabling will favor displaying text inside of graph item. check if you want the text to display within the graph shape',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
				),
			),
			array(
				'key' => 'field_5d542c9d927b3',
				'label' => 'Line Graph Settings',
				'name' => 'dv_line',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'line',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d557f705e669',
						'label' => 'Line Style',
						'name' => 'style',
						'type' => 'select',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'' => 'None',
							'curve' => 'Curve',
							'step' => 'Step',
						),
						'default_value' => array(
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d56c791feb5d',
						'label' => 'Stroke Weight',
						'name' => 'weight',
						'type' => 'number',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '25',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => 0,
						'max' => '',
						'step' => '.1',
					),
					array(
						'key' => 'field_5d548811017aa',
						'label' => 'Stroke Color',
						'name' => 'color',
						'type' => 'color_picker',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '25',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
					),
					array(
						'key' => 'field_5d548851017ab',
						'label' => 'Add Plot Points?',
						'name' => 'points',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '25',
							'class' => '',
							'id' => '',
						),
						'message' => 'Add points to align to data coordinates',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d5580615e66a',
						'label' => 'Add Area Fill?',
						'name' => 'fill',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '25',
							'class' => '',
							'id' => '',
						),
						'message' => 'Set a fill color to the side nearest to the name axis',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d558ac9931b5',
						'label' => 'Plot Point Settings',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d548851017ab',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5d5583d7e6daf',
						'label' => 'Points Color',
						'name' => 'points_color',
						'type' => 'color_picker',
						'instructions' => 'Leaving this blank will set this as set graph line color if that is set',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d548851017ab',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
					),
					array(
						'key' => 'field_5d558b02931b6',
						'label' => 'Size',
						'name' => 'points_size',
						'type' => 'number',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5d558a53931b4',
						'label' => 'Fill Settings',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d5580615e66a',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5d5580d35e66b',
						'label' => 'Color',
						'name' => 'fill_color',
						'type' => 'color_picker',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d5580615e66a',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '33.33',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
					),
					array(
						'key' => 'field_5d56d65c89e4c',
						'label' => 'Opacity',
						'name' => 'fill_opacity',
						'type' => 'number',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d5580615e66a',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '33.33',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => 0,
						'max' => 1,
						'step' => '.01',
					),
					array(
						'key' => 'field_5d558b60931b7',
						'label' => 'Invert Axis?',
						'name' => 'fill_invert',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d5580615e66a',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '33.33',
							'class' => '',
							'id' => '',
						),
						'message' => 'Add fill to the side opposite of the name key axis\'s alignment',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5d5582d15e670',
						'label' => 'Advanced',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5d5586a6811db',
						'label' => 'Dash Array',
						'name' => 'dash',
						'type' => 'text',
						'instructions' => 'Set dashes on the line graph. The pattern is `dash, gap, dash, gap...`<br>
	<a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray" >https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray</a>',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '10,20,10,20',
						'prepend' => '',
						'append' => '',
						'maxlength' => '',
					),
				),
			),
			array(
				'key' => 'field_5d499f4b8f7aa',
				'label' => 'Pie Graph Settings',
				'name' => 'dv_pi',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'pie',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d49a0598f7ac',
						'label' => 'Label Style',
						'name' => 'label_style',
						'type' => 'select',
						'instructions' => 'How attached data to the chart visual will be represented',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'linked' => 'Linked',
							'within' => 'Within',
						),
						'default_value' => 'linked',
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d60557a93c1a',
						'label' => 'Inner Radius',
						'name' => 'in_radius',
						'type' => 'number',
						'instructions' => 'Size of inner radius relative to the size of the whole pie chart',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => 0,
						'max' => 1,
						'step' => '.01',
					),
				),
			),
			array(
				'key' => 'field_5d66b3ea0fdc3',
				'label' => 'Scatter Plot Area Settings',
				'name' => 'dv_area',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => array(
					array(
						array(
							'field' => 'field_5d420a45de26f',
							'operator' => '==',
							'value' => 'scatter',
						),
					),
				),
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d66b5bf0fdc7',
						'label' => 'Minimum Radius',
						'name' => 'min',
						'type' => 'number',
						'instructions' => 'minimum size range of scatter plots to represent the lower range data',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '33',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
					array(
						'key' => 'field_5d66b5dc0fdc8',
						'label' => 'Maximum Radius',
						'name' => 'max',
						'type' => 'number',
						'instructions' => 'maximum size range of scatter plots to represent the lower range data',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '33',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
					array(
						'key' => 'field_5d66bf01b4de3',
						'label' => 'Opacity',
						'name' => 'opacity',
						'type' => 'number',
						'instructions' => 'Opacity of scatter plots\' fill. opacity below 1 is recommended',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '33',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => 0,
						'max' => 1,
						'step' => '.01',
					),
				),
			),
			array(
				'key' => 'field_5d570e0a7d32b',
				'label' => 'Colors Settings',
				'name' => 'dv_color',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '50',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5d9b95624d5e7',
						'label' => 'Background',
						'name' => 'background',
						'type' => 'color_picker',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
					),
					array(
						'key' => 'field_5d42ff755f462',
						'label' => 'Color Palette',
						'name' => 'palette',
						'type' => 'repeater',
						'instructions' => 'Palette will be applied based on the order of the data.<br>Setting one color will set all graph items to that palette<br><br>
	<strong>If the graph type is set to pie or the color data key is left blank, the name data will be linked to the palette</strong>',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'collapsed' => '',
						'min' => 0,
						'max' => 0,
						'layout' => 'row',
						'button_label' => '',
						'sub_fields' => array(
							array(
								'key' => 'field_5d42ff995f463',
								'label' => 'Color',
								'name' => 'color',
								'type' => 'color_picker',
								'instructions' => '',
								'required' => 0,
								'conditional_logic' => 0,
								'wrapper' => array(
									'width' => '',
									'class' => '',
									'id' => '',
								),
								'default_value' => '',
							),
						),
					),
					array(
						'key' => 'field_5d9b9853d5bec',
						'label' => 'Color By',
						'name' => 'by',
						'type' => 'select',
						'instructions' => 'Select by which the dataset will be categorized to colors',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d9b8ffe900c3',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'key' => 'Provided color key',
							'data' => 'By data group',
						),
						'default_value' => array(
							0 => 'key',
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5d5ebcf2961ec',
						'label' => 'Legend',
						'name' => 'legend',
						'type' => 'true_false',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42ff755f462',
									'operator' => '>',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d42ff755f462',
									'operator' => '==empty',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'pie',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Add list of colors and what data they represent',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
				),
			),
			array(
				'key' => 'field_5db74240181f6',
				'label' => 'Text Settings',
				'name' => 'dv_text',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '50',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5db742a7181f7',
						'label' => 'Name Size',
						'name' => 'name_size',
						'type' => 'number',
						'instructions' => 'Size ratio to calculate to the font size set',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '0',
								),
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '!=',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '0',
								),
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '!=',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d49a0598f7ac',
									'operator' => '!=',
									'value' => '',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => 'em',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
					array(
						'key' => 'field_5db74688181f8',
						'label' => 'Value Size',
						'name' => 'value_size',
						'type' => 'number',
						'instructions' => 'Size ratio to calculate to the font size set',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d42110769b59',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '!=',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d4494e1f5295',
									'operator' => '==',
									'value' => '1',
								),
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '!=',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d49a0598f7ac',
									'operator' => '!=',
									'value' => '',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => 'em',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
					array(
						'key' => 'field_5db7473f181fa',
						'label' => 'Ticks Size',
						'name' => 'ticks_size',
						'type' => 'number',
						'instructions' => 'Size ratio to calculate to the font size set',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d49b51b576ae',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d49b81e8a9b1',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => 'em',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
					array(
						'key' => 'field_5db74a6d181fe',
						'label' => 'Legend Size',
						'name' => 'legend_size',
						'type' => 'number',
						'instructions' => 'Size ratio to calculate to the font size set',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5d5ebcf2961ec',
									'operator' => '==',
									'value' => '1',
								),
							),
							array(
								array(
									'field' => 'field_5d420a45de26f',
									'operator' => '==',
									'value' => 'pie',
								),
								array(
									'field' => 'field_5d49a0598f7ac',
									'operator' => '==',
									'value' => '',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => '',
						'min' => '',
						'max' => '',
						'step' => '.01',
					),
				),
			),
			array(
				'key' => 'field_5e04f33005130',
				'label' => 'Tooltip Settings',
				'name' => 'dv_tooltip',
				'type' => 'group',
				'instructions' => '',
				'required' => 0,
				'conditional_logic' => 0,
				'wrapper' => array(
					'width' => '',
					'class' => '',
					'id' => '',
				),
				'layout' => 'block',
				'sub_fields' => array(
					array(
						'key' => 'field_5e04f36a05131',
						'label' => 'Enable',
						'name' => 'enable',
						'type' => 'true_false',
						'instructions' => 'Enable tooltip',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'message' => 'Checking will generate a tooltip that contains all the properties represented by the graph item',
						'default_value' => 0,
						'ui' => 0,
						'ui_on_text' => '',
						'ui_off_text' => '',
					),
					array(
						'key' => 'field_5e0a6a698bee4',
						'label' => 'Text Align',
						'name' => 'text_align',
						'type' => 'select',
						'instructions' => 'Aligment of tooltip text',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5e04f36a05131',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'choices' => array(
							'left' => 'Left',
							'right' => 'Right',
							'center' => 'Center',
						),
						'default_value' => array(
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5e0a6f90c77da',
						'label' => 'Width',
						'name' => 'width',
						'type' => 'number',
						'instructions' => 'Set width of the tooltip. Will be interpreted as pixels',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5e04f36a05131',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '50',
							'class' => '',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '',
						'prepend' => '',
						'append' => 'px',
						'min' => '',
						'max' => '',
						'step' => '',
					),
					array(
						'key' => 'field_5e0a69798bee3',
						'label' => 'Direction',
						'name' => 'direction',
						'type' => 'select',
						'instructions' => 'Direction where tooltip will be placed',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5e04f36a05131',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'choices' => array(
							'n' => 'North (Default)',
							'e' => 'East',
							's' => 'South',
							'w' => 'West',
						),
						'default_value' => array(
						),
						'allow_null' => 0,
						'multiple' => 0,
						'ui' => 0,
						'return_format' => 'value',
						'ajax' => 0,
						'placeholder' => '',
					),
					array(
						'key' => 'field_5e04f3a305133',
						'label' => 'Advanced',
						'name' => '',
						'type' => 'accordion',
						'instructions' => '',
						'required' => 0,
						'conditional_logic' => array(
							array(
								array(
									'field' => 'field_5e04f36a05131',
									'operator' => '==',
									'value' => '1',
								),
							),
						),
						'wrapper' => array(
							'width' => '',
							'class' => '',
							'id' => '',
						),
						'open' => 0,
						'multi_expand' => 0,
						'endpoint' => 0,
					),
					array(
						'key' => 'field_5e0a7de4087b5',
						'label' => 'Direction Parameter',
						'name' => 'direction_parameter',
						'type' => 'textarea',
						'instructions' => 'Function or string that will be used by the <code>d3.tip.direction()</code> method. This will replace the set tooltip direction. View documentation here:<br> <a target="_blank" href="https://github.com/caged/d3-tip/shape/master/docs/positioning-tooltips.md#tipdirection">https://github.com/caged/d3-tip/shape/master/docs/positioning-tooltips.md#tipdirection</a>',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => '\'n\' | function(data,index){ return (d.direction == \'north\') ? \'n\' : \'\'; }',
						'maxlength' => '',
						'rows' => 3,
						'new_lines' => '',
					),
					array(
						'key' => 'field_5e04f38c05132',
						'label' => 'Content',
						'name' => 'content',
						'type' => 'textarea',
						'instructions' => 'Function that will be used by the <code>d3.tip.html()</code> method. View documentation here:<br> <a target="_blank" href="https://github.com/caged/d3-tip/shape/master/docs/initializing-tooltips.md#d3tip">https://github.com/caged/d3-tip/shape/master/docs/initializing-tooltips.md#d3tip</a>',
						'required' => 0,
						'conditional_logic' => 0,
						'wrapper' => array(
							'width' => '',
							'class' => 'dv-code',
							'id' => '',
						),
						'default_value' => '',
						'placeholder' => 'function(data,index){ return +data; }',
						'maxlength' => '',
						'rows' => 3,
						'new_lines' => '',
					),
				),
			),
		),
		'location' => array(
			array(
				array(
					'param' => 'post_type',
					'operator' => '==',
					'value' => 'data-visual',
				),
			),
		),
		'menu_order' => 0,
		'position' => 'normal',
		'style' => 'default',
		'label_placement' => 'top',
		'instruction_placement' => 'label',
		'hide_on_screen' => '',
		'active' => 1,
		'description' => '',
	)
);