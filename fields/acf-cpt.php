<?php
//only fields that exist here will be passed down to the data visual object or array or whatever that way shits secure
// also whenever this is updated, when the admin page is viewed after update, the json file of fields is updated as well so if the dev of this plugin needs to fix the fields she can do so by importing the fields on aDIFFERENT TEST WORDPRESS SITE so it doesnt conflict with the site that the plugin is insytalled on
//thats right bitch im a she
$_1p21_dv_fields_cpt = array(
	'key' => 'group_5d4206c985d00',
	'title' => 'Data Visualizer',
	'fields' => array(
		array(
			'key' => 'field_5d571ad986ab3',
			'label' => 'Data Settings',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d571a157030d',
			'label' => 'Source',
			'name' => 'dv_src',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d420de06b6c9',
					'label' => 'Source Type',
					'name' => 'type',
					'type' => 'select',
					'instructions' => 'Choose how file should be imported',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'file' => 'File (csv,tsv)',
						'url' => 'URL',
						'text' => 'Text (JSON code)',
						'rows' => 'Rows (UI Field)',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d4206cdde265',
					'label' => 'File',
					'name' => 'file',
					'type' => 'file',
					'instructions' => 'Must be tsv, csv',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '==',
								'value' => 'file',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'return_format' => 'array',
					'library' => 'all',
					'min_size' => '',
					'max_size' => '',
					'mime_types' => '',
				),
				array(
					'key' => 'field_5d447ad169ee3',
					'label' => 'Url',
					'name' => 'url',
					'type' => 'url',
					'instructions' => 'Url must link directly to data file in either .csv,.json, or .tsv format',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '==',
								'value' => 'url',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d420ebe6b6ca',
					'label' => 'Text',
					'name' => 'text',
					'type' => 'textarea',
					'instructions' => 'input json code',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '==',
								'value' => 'text',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'maxlength' => '',
					'rows' => '',
					'new_lines' => '',
				),
				array(
					'key' => 'field_5d420719de267',
					'label' => 'Rows',
					'name' => 'row',
					'type' => 'repeater',
					'instructions' => 'Input a basic data in rows',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '==',
								'value' => 'rows',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'collapsed' => '',
					'min' => 0,
					'max' => 0,
					'layout' => 'table',
					'button_label' => '',
					'sub_fields' => array(
						array(
							'key' => 'field_5d420962de26e',
							'label' => 'Label (Data 1)',
							'name' => '0',
							'type' => 'text',
							'instructions' => 'data that will represent the labels or a separate axis of the data.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
						array(
							'key' => 'field_5d42077fde268',
							'label' => 'Value (Data 2)',
							'name' => '1',
							'type' => 'text',
							'instructions' => 'data that will represent the labels.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
					),
				),
				array(
					'key' => 'field_5d4875c085673',
					'label' => 'Source Key',
					'name' => 'key',
					'type' => 'text',
					'instructions' => 'Fill in the key for the data to use if it is not in the root level',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '!=',
								'value' => 'rows',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 'content.items',
					'prepend' => 'data.',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d5702b2b6d93',
			'label' => 'Data Keys',
			'name' => 'dv_data_key',
			'type' => 'group',
			'instructions' => 'Fill in the key for the data to use if it is not in the root level',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420de06b6c9',
						'operator' => '!=',
						'value' => 'rows',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => 'dv-code',
				'id' => '',
			),
			'layout' => 'table',
			'sub_fields' => array(
				array(
					'key' => 'field_5d420a6cde270',
					'label' => 'Name Key',
					'name' => '0',
					'type' => 'text',
					'instructions' => 'Type in the key relative to the data instance<br>
Key or column name to represent or name the data',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '!=',
								'value' => 'rows',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 'content',
					'prepend' => 'data[0].',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d420b33de274',
					'label' => 'Value Key',
					'name' => '1',
					'type' => 'text',
					'instructions' => 'Type in the key relative to the data instance<br>
Key or column name of the data that will represent data based on the name key',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420de06b6c9',
								'operator' => '!=',
								'value' => 'rows',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 'content',
					'prepend' => 'data[0].',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d420abade272',
			'label' => 'Layout',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5d420a45de26f',
			'label' => 'Type',
			'name' => 'dv_type',
			'type' => 'select',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bar' => 'Bar (Default)',
				'line' => 'Line',
				'pie' => 'Pie (In Progress)',
				'scatter' => 'Scatter Plot (Coming Soon)',
			),
			'default_value' => array(
				0 => 'bar',
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5d55d2e48b9a1',
			'label' => 'Set Name Key As Numeric',
			'name' => 'dv_name_is_num',
			'type' => 'true_false',
			'instructions' => 'Adds additional capabilities to data.',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '!=',
						'value' => 'bar',
					),
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '!=',
						'value' => 'pie',
					),
				),
			),
			'wrapper' => array(
				'width' => '100',
				'class' => 'dv-code',
				'id' => '',
			),
			'message' => 'Convert name key to an axis of numeric data',
			'default_value' => 0,
			'ui' => 0,
			'ui_on_text' => '',
			'ui_off_text' => '',
		),
		array(
			'key' => 'field_5d448fef59823',
			'label' => 'X Settings',
			'name' => 'dv_x',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'bar',
					),
				),
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'line',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d42110769b59',
					'label' => 'Axis Data',
					'name' => 'data',
					'type' => 'select',
					'instructions' => 'Data key to represent horizontally',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						0 => 'Name Data',
						1 => 'Value Data',
					),
					'default_value' => array(
						0 => 0,
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d44905e59825',
					'label' => 'Alignment',
					'name' => 'align',
					'type' => 'select',
					'instructions' => 'Where to align the axis',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'top' => 'Top',
						'bottom' => 'Bottom',
					),
					'default_value' => array(
						0 => 'bottom',
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d49b51b576ae',
					'label' => 'Use Ticks?',
					'name' => 'ticks',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => 'Checking will display axis this on a rule instead of inside the graph element',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d4211d969b5b',
					'label' => 'Label',
					'name' => 'label',
					'type' => 'text',
					'instructions' => 'Label for horizontal data. will default to y axis key',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d499c699d0fc',
					'label' => 'Minimum',
					'name' => 'min',
					'type' => 'number',
					'instructions' => 'value of the minimum height or tick mark.<br>Leave blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => 0,
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499c809d0fd',
					'label' => 'Maximum',
					'name' => 'max',
					'type' => 'number',
					'instructions' => 'value of the maximum height or tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d54328233142',
					'label' => 'Ticks Format Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d54329833143',
					'label' => 'Prepend',
					'name' => 'prepend',
					'type' => 'text',
					'instructions' => 'Character to prepend tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '$',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d5432ac33144',
					'label' => 'Append',
					'name' => 'append',
					'type' => 'text',
					'instructions' => 'Character to append tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 'k',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d5432cd33145',
					'label' => 'Divider',
					'name' => 'divider',
					'type' => 'number',
					'instructions' => 'Divide numeric data to shorten tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d55d2e48b9a1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 1000,
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '.01',
				),
				array(
					'key' => 'field_5d543e0ded5d3',
					'label' => 'Ticks Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d44915159827',
					'label' => 'Ticks Amount',
					'name' => 'ticks_amount',
					'type' => 'number',
					'instructions' => 'number of tick marks along the axis',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d55d2e48b9a1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d548a3e2c501',
					'label' => 'Add Grid',
					'name' => 'grid',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d42110769b59',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'message' => 'add lines that will represent a grid along the axis',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d59f32e4c3c4',
					'label' => 'Grid Increment (Beta)',
					'name' => 'grid_increment',
					'type' => 'number',
					'instructions' => 'How many ticks the grid will align to. leaving this blank will equal to 1',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d548a3e2c501',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d44915159827',
								'operator' => '!=empty',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d4af01f2e07c',
					'label' => 'Advanced',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d44948ed8de9',
					'label' => 'Ticks Parameter',
					'name' => 'ticks_parameter',
					'type' => 'text',
					'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a><br>Setting this will override Tick Format settings',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b51b576ae',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '"~s" | function(data){ return +data; }',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d4494e1f5294',
			'label' => 'Y Settings',
			'name' => 'dv_y',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'bar',
					),
				),
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'line',
					),
				),
			),
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d4494e1f5295',
					'label' => 'Axis Data',
					'name' => 'data',
					'type' => 'select',
					'instructions' => 'Data key to represent horizontally',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						0 => 'Name Data',
						1 => 'Value Data',
					),
					'default_value' => array(
						0 => 1,
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d4494e1f5297',
					'label' => 'Alignment',
					'name' => 'align',
					'type' => 'select',
					'instructions' => 'Where to align the axis',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'left' => 'Left',
						'right' => 'Right',
					),
					'default_value' => array(
						0 => 'left',
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d49b81e8a9b1',
					'label' => 'Use Ticks?',
					'name' => 'ticks',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => 'Checking will display axis this on a rule instead of inside the graph element',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d4494e1f5296',
					'label' => 'Label',
					'name' => 'label',
					'type' => 'text',
					'instructions' => 'Label for horizontal data. will default to y axis key',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d499bac9d0fa',
					'label' => 'Minimum',
					'name' => 'min',
					'type' => 'number',
					'instructions' => 'value of the minimum width or tick mark.<br>Set as blank if desired first tick mark value is the minimum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => 0,
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d499c2a9d0fb',
					'label' => 'Maximum',
					'name' => 'max',
					'type' => 'number',
					'instructions' => 'value of the maximum width or tick mark.<br>Leave blank if desired first tick mark value is the maximum value in the data<br> to disable tick marks to scale with data updates, setting a value is recommended.',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d542d28927b4',
					'label' => 'Ticks Format Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d542e1a927b6',
					'label' => 'Prepend',
					'name' => 'prepend',
					'type' => 'text',
					'instructions' => 'Character to prepend tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '$',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d542e32927b7',
					'label' => 'Append',
					'name' => 'append',
					'type' => 'text',
					'instructions' => 'Character to append tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 'k',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5d542f29927b9',
					'label' => 'Divider',
					'name' => 'divider',
					'type' => 'number',
					'instructions' => 'Divide numeric data to shorten tick label',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d55d2e48b9a1',
								'operator' => '!=',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => 1000,
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '.01',
				),
				array(
					'key' => 'field_5d543eaa376e9',
					'label' => 'Ticks Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '==',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d4494e1f5298',
					'label' => 'Ticks Amount',
					'name' => 'ticks_amount',
					'type' => 'number',
					'instructions' => 'number of tick marks along the axis',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
							array(
								'field' => 'field_5d55d2e48b9a1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d548a8f2c505',
					'label' => 'Add Grid',
					'name' => 'grid',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5295',
								'operator' => '==',
								'value' => '1',
							),
						),
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'bar',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'message' => 'add lines that will represent a grid along the axis',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d59f39c4c3c5',
					'label' => 'Grid Increment (Beta)',
					'name' => 'grid_increment',
					'type' => 'number',
					'instructions' => 'How many ticks the grid will align to. leaving this blank will equal to 1',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d548a8f2c505',
								'operator' => '==',
								'value' => '1',
							),
							array(
								'field' => 'field_5d4494e1f5298',
								'operator' => '!=empty',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d4af0ae2e07f',
					'label' => 'Advanced',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d4494e1f5299',
					'label' => 'Ticks Parameter',
					'name' => 'ticks_parameter',
					'type' => 'text',
					'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a><br>Setting this will override Tick Format settings',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d49b81e8a9b1',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '"~s" | function(data){ return +data; }',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d542c9d927b3',
			'label' => 'Line Settings',
			'name' => 'dv_line',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'line',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d557f705e669',
					'label' => 'Line Style',
					'name' => 'style',
					'type' => 'select',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'' => 'None',
						'curve' => 'Curve',
						'step' => 'Step',
					),
					'default_value' => array(
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d56c791feb5d',
					'label' => 'Stroke Weight',
					'name' => 'weight',
					'type' => 'number',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '25',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '.1',
				),
				array(
					'key' => 'field_5d548811017aa',
					'label' => 'Stroke Color',
					'name' => 'color',
					'type' => 'color_picker',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '25',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
				),
				array(
					'key' => 'field_5d548851017ab',
					'label' => 'Add Plot Points?',
					'name' => 'points',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '25',
						'class' => '',
						'id' => '',
					),
					'message' => 'Add points to align to data coordinates',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d5580615e66a',
					'label' => 'Add Area Fill?',
					'name' => 'fill',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '25',
						'class' => '',
						'id' => '',
					),
					'message' => 'Set a fill color to the side nearest to the name axis',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d558ac9931b5',
					'label' => 'Plot Point Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d548851017ab',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d5583d7e6daf',
					'label' => 'Points Color',
					'name' => 'points_color',
					'type' => 'color_picker',
					'instructions' => 'Leaving this blank will set this as set graph line color if that is set',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d548851017ab',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
				),
				array(
					'key' => 'field_5d558b02931b6',
					'label' => 'Size',
					'name' => 'points_size',
					'type' => 'number',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => '',
					'max' => '',
					'step' => '',
				),
				array(
					'key' => 'field_5d558a53931b4',
					'label' => 'Area Settings',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d5580615e66a',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d5580d35e66b',
					'label' => 'Color',
					'name' => 'fill_color',
					'type' => 'color_picker',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d5580615e66a',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '33.33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
				),
				array(
					'key' => 'field_5d56d65c89e4c',
					'label' => 'Opacity',
					'name' => 'fill_opacity',
					'type' => 'number',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d5580615e66a',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '33.33',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'min' => 0,
					'max' => 1,
					'step' => '.01',
				),
				array(
					'key' => 'field_5d558b60931b7',
					'label' => 'Fill against the axis?',
					'name' => 'fill_invert',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d5580615e66a',
								'operator' => '==',
								'value' => '1',
							),
						),
					),
					'wrapper' => array(
						'width' => '33.33',
						'class' => '',
						'id' => '',
					),
					'message' => 'Add fill to the side opposite of the name key axis\'s alignment',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d5582d15e670',
					'label' => 'Advanced',
					'name' => '',
					'type' => 'accordion',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'open' => 0,
					'multi_expand' => 0,
					'endpoint' => 0,
				),
				array(
					'key' => 'field_5d5586a6811db',
					'label' => 'Dash Array',
					'name' => 'dash',
					'type' => 'text',
					'instructions' => 'Set dashes on the line graph. The pattern is `dash, gap, dash, gap...`<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray" >https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray</a>',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '10,20,10,20',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d499f4b8f7aa',
			'label' => 'Pie Settings',
			'name' => 'dv_pi',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5d420a45de26f',
						'operator' => '==',
						'value' => 'pie',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d49a0598f7ac',
					'label' => 'Label Style',
					'name' => 'label_style',
					'type' => 'select',
					'instructions' => 'How attached data to the chart visual will be represented',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'auto' => 'Auto',
						'linked' => 'Linked',
						'within' => 'Within',
					),
					'default_value' => array(
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5d5c592a34ddf',
					'label' => 'Add Legends?',
					'name' => 'legends',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => 'List legends on a corner',
					'default_value' => 0,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
				array(
					'key' => 'field_5d5c5b3134de0',
					'label' => 'Name Settings',
					'name' => '0',
					'type' => 'group',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'layout' => 'block',
					'sub_fields' => array(
						array(
							'key' => 'field_5d5c5b3134de8',
							'label' => 'Prepend',
							'name' => 'prepend',
							'type' => 'text',
							'instructions' => 'Character to prepend tick label',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '50',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '$',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
						array(
							'key' => 'field_5d5c5b3134de9',
							'label' => 'Append',
							'name' => 'append',
							'type' => 'text',
							'instructions' => 'Character to append tick label',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '50',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => 'k',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
						array(
							'key' => 'field_5d5c5b3134def',
							'label' => 'Advanced',
							'name' => '',
							'type' => 'accordion',
							'instructions' => '',
							'required' => 0,
							'conditional_logic' => array(
								array(
									array(
										'field' => 'field_5d5c5b3134de3',
										'operator' => '==',
										'value' => '1',
									),
								),
							),
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'open' => 0,
							'multi_expand' => 0,
							'endpoint' => 0,
						),
						array(
							'key' => 'field_5d5c5b3134df0',
							'label' => 'Format Parameter',
							'name' => 'format_parameter',
							'type' => 'text',
							'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a><br>Setting this will override Tick Format settings',
							'required' => 0,
							'conditional_logic' => array(
								array(
									array(
										'field' => 'field_5d420de06b6c9',
										'operator' => '==',
										'value' => '',
									),
								),
							),
							'wrapper' => array(
								'width' => '',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '"~s" | function(data){ return +data; }',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
					),
				),
				array(
					'key' => 'field_5d5c5c0734df1',
					'label' => 'Value Settings',
					'name' => '1',
					'type' => 'group',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '50',
						'class' => '',
						'id' => '',
					),
					'layout' => 'block',
					'sub_fields' => array(
						array(
							'key' => 'field_5d5c5c0734df3',
							'label' => 'Prepend',
							'name' => 'prepend',
							'type' => 'text',
							'instructions' => 'Character to prepend tick label',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '50',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '$',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
						array(
							'key' => 'field_5d5c5c0734df4',
							'label' => 'Append',
							'name' => 'append',
							'type' => 'text',
							'instructions' => 'Character to append tick label',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '50',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => 'k',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
						array(
							'key' => 'field_5d5c5c0734df5',
							'label' => 'Divider',
							'name' => 'divider',
							'type' => 'number',
							'instructions' => 'Divide numeric data to shorten tick label',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => 1000,
							'prepend' => '',
							'append' => '',
							'min' => '',
							'max' => '',
							'step' => '.01',
						),
						array(
							'key' => 'field_5d5c5c0734df6',
							'label' => 'Advanced',
							'name' => '',
							'type' => 'accordion',
							'instructions' => '',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'open' => 0,
							'multi_expand' => 0,
							'endpoint' => 0,
						),
						array(
							'key' => 'field_5d5c5c0734df7',
							'label' => 'Format Parameter',
							'name' => 'format_parameter',
							'type' => 'text',
							'instructions' => 'accepts string format or function<br>Reference: <a href="https://github.com/d3/d3-format">https://github.com/d3/d3-format</a><br>Setting this will override Tick Format settings',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => 'dv-code',
								'id' => '',
							),
							'default_value' => '',
							'placeholder' => '"~s" | function(data){ return +data; }',
							'prepend' => '',
							'append' => '',
							'maxlength' => '',
						),
					),
				),
			),
		),
		array(
			'key' => 'field_5d570e0a7d32b',
			'label' => 'Colors Settings',
			'name' => 'dv_color',
			'type' => 'group',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5d42ff755f462',
					'label' => 'Color Palette',
					'name' => 'palette',
					'type' => 'repeater',
					'instructions' => 'Pie charts will use the name key as the color palette reference',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'collapsed' => '',
					'min' => 0,
					'max' => 0,
					'layout' => 'row',
					'button_label' => '',
					'sub_fields' => array(
						array(
							'key' => 'field_5d42ff995f463',
							'label' => 'Color',
							'name' => 'color',
							'type' => 'color_picker',
							'instructions' => '',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'default_value' => '',
						),
					),
				),
				array(
					'key' => 'field_5d42ffcf5f464',
					'label' => 'Colors Data Key',
					'name' => 'data_key',
					'type' => 'text',
					'instructions' => 'Data key to link color scheme to. if layout is set to line, this will be applied to plot points and will override set points color',
					'required' => 0,
					'conditional_logic' => array(
						array(
							array(
								'field' => 'field_5d420a45de26f',
								'operator' => '!=',
								'value' => 'pie',
							),
						),
					),
					'wrapper' => array(
						'width' => '',
						'class' => 'dv-code',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => 'data[0].',
					'append' => '',
					'maxlength' => '',
				),
			),
		),
		array(
			'key' => 'field_5d42ff6a5f461',
			'label' => 'Advanced',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'post_type',
				'operator' => '==',
				'value' => 'data-visual',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => 1,
	'description' => '',
);